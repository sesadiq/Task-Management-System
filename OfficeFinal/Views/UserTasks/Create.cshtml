@model OfficeFinal.Models.UserTask

@{
    ViewBag.Title = "Create";
}

    <div class="col-12 col-md-6 col-lg-6" style="margin:0 auto">
        <div class="card">
            <div class="card-header">
                <h4>Create Task</h4>
            </div>
            <div class="card-body">



                @using (Html.BeginForm("Create","UserTasks", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group" style="display: none">
                        @Html.LabelFor(model => model.CreatorId, "CreatorId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CreatorId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CreatorId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Type", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TaskTypeId", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <textarea class="form-control" name="Message" id="exampleFormControlTextarea1" rows="10" required="required"></textarea>
                            @*<textarea class="summernote-simple" id="Message" name="Message"></textarea>*@
                            @*@Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" name="CreateDate" class="form-control datepicker" required="required">
                            @*<input type="date" name="CreateDate" class="form-control" required="required" />*@
                            @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DeadLine, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.DeadLine, new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" name="DeadLine" class="form-control datepicker" required="required">
                            @*<input type="date" class="form-control" name="DeadLine" required="required" />*@
                            @Html.ValidationMessageFor(model => model.DeadLine, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StatusId, "StatusId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-6">
                                <input type="file" name="files" multiple="multiple" />

                            </div>

                        </div>

                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>



            </div>
        </div>




        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }

    </div>




